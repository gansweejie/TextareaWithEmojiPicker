/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/emoji-picker-element@1.22.8/trimEmojiData.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const requiredKeys=["annotation","emoji","group","order","version"];function assertEmojiData(e){if(!e||!Array.isArray(e)||!e[0]||"object"!=typeof e[0]||requiredKeys.some((o=>!(o in e[0]))))throw new Error("Emoji data is in the wrong format")}const optionalKeys=["skins","emoticon","shortcodes","tags"],allKeys=[...requiredKeys,...optionalKeys],allSkinsKeys=["tone","emoji","version"];function trimEmojiData(e){return console.warn("trimEmojiData() is deprecated and may be removed eventually. If you use emoji-picker-element-data instead of emojibase-data, there is no need for trimEmojiData(). For details, see: https://github.com/nolanlawson/emoji-picker-element/blob/master/README.md#trimming-the-emoji-data-deprecated"),assertEmojiData(e),e.map((e=>{const o={};for(const t of allKeys)t in e&&(o[t]="skins"===t?e[t].map((e=>{const o={};for(const t of allSkinsKeys)o[t]=e[t];return o})):e[t]);return o}))}export{trimEmojiData as default};
//# sourceMappingURL=/sm/1b4d440f8d8e39029684971a74c6819910f2f04d5be602ce25486540a3c70280.map